strategy:
  matrix:
    Linux:
      imageName: 'ubuntu-latest'
      artifactName: 'linux'
      runtimeIdentifier: 'linux-x64'
    Mac:
      imageName: 'ubuntu-latest'
      artifactName: 'macos'
      runtimeIdentifier: 'osx-x64'
    Windows:
      imageName: 'windows-latest'
      artifactName: 'windows'
      runtimeIdentifier: 'win-x64'

pool:
  vmImage: $(imageName)

steps:
- script: dotnet restore
  displayName: 'Restore'
- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: publish
    publishWebProjects: False
    zipAfterPublish: False
    projects: 'src/yabft.csproj'
    arguments: '-c Release -r $(runtimeIdentifier) -o $(Build.ArtifactStagingDirectory) -p:TreatWarningsAsErrors=True -p:PublishSingleFile=true'
- script: dotnet test tests/tests.csproj --logger trx --collect:"XPlat Code Coverage" -p:TreatWarningsAsErrors=True
  displayName: 'Test'
  condition: eq(variables.artifactName, 'linux')
- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@4
  displayName: Generate Code Coverage Report
  condition: eq(variables.artifactName, 'linux')
  inputs:
    reports: $(Build.SourcesDirectory)/**/coverage.cobertura.xml
    targetdir: $(Build.ArtifactStagingDirectory)/TestResults/
    reporttypes: 'Cobertura'
- task: PublishTestResults@2
  condition: eq(variables.artifactName, 'linux')
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  condition: eq(variables.artifactName, 'linux')
  inputs:
    codeCoverageTool: cobertura
    summaryFileLocation: $(Build.ArtifactStagingDirectory)/TestResults/Cobertura.xml
- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    artifactName: '$(artifactName)'
    pathToPublish: '$(Build.ArtifactStagingDirectory)/src'